# 1 "Source/gp_Main.c"
# 1 "/cygdrive/d/Common/projects/mikro_repo/Mikro/project_c/BaseProject//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "Source/gp_Main.c"



# 1 "Source/base\\gp.c" 1



# 1 "Source/base\\/gp_types.c" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_types.h" 1



typedef void gpVoid;
typedef char gpBool;
typedef unsigned char gpUByte;
typedef signed char gpByte;
typedef unsigned short gpUWord;
typedef signed short gpWord;
typedef unsigned short gpUInt;
typedef signed short gpInt;
typedef char gpChar;
typedef char* gpString;
typedef short gpFloat;

extern const gpVoid* null;

extern const long GP_FLOAT_BASE;

gpFloat gpMul(gpFloat a, gpFloat b);
gpFloat gpDiv(gpFloat a, gpFloat b);
gpFloat gpSub(gpFloat a, gpFloat b);
gpFloat gpAdd(gpFloat a, gpFloat b);
gpFloat gpNeg(gpFloat a);
# 5 "Source/base\\/gp_types.c" 2

const long GP_FLOAT_BASE=10000;
const gpBool true=1;
const gpBool false=0;
const gpVoid* null=((gpVoid*)0);

inline gpFloat gpMul(gpFloat a, gpFloat b){
 long A=a, B=b;
 return A*B/GP_FLOAT_BASE;
}
inline gpFloat gpDiv(gpFloat a, gpFloat b){
 long A=a, B=b;
 return A/B*GP_FLOAT_BASE;
}

inline gpFloat gpSub(gpFloat a, gpFloat b){return a-b;}
inline gpFloat gpAdd(gpFloat a, gpFloat b){return a+b;}
inline gpFloat gpNeg(gpFloat a){return -a;}
# 5 "Source/base\\gp.c" 2
# 1 "Source/base\\/gp_error.c" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error.h" 1




# 1 "/usr/include/stdio.h" 1 3 4
# 29 "/usr/include/stdio.h" 3 4
# 1 "/usr/include/_ansi.h" 1 3 4
# 15 "/usr/include/_ansi.h" 3 4
# 1 "/usr/include/newlib.h" 1 3 4
# 16 "/usr/include/_ansi.h" 2 3 4
# 1 "/usr/include/sys/config.h" 1 3 4



# 1 "/usr/include/machine/ieeefp.h" 1 3 4
# 5 "/usr/include/sys/config.h" 2 3 4
# 1 "/usr/include/sys/features.h" 1 3 4
# 6 "/usr/include/sys/config.h" 2 3 4
# 211 "/usr/include/sys/config.h" 3 4
# 1 "/usr/include/cygwin/config.h" 1 3 4
# 212 "/usr/include/sys/config.h" 2 3 4
# 17 "/usr/include/_ansi.h" 2 3 4
# 30 "/usr/include/stdio.h" 2 3 4




# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 1 3 4
# 211 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 3 4
typedef unsigned int size_t;
# 35 "/usr/include/stdio.h" 2 3 4


# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stdarg.h" 1 3 4
# 40 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 38 "/usr/include/stdio.h" 2 3 4







# 1 "/usr/include/sys/reent.h" 1 3 4
# 13 "/usr/include/sys/reent.h" 3 4
# 1 "/usr/include/_ansi.h" 1 3 4
# 14 "/usr/include/sys/reent.h" 2 3 4
# 1 "/usr/include/sys/_types.h" 1 3 4
# 12 "/usr/include/sys/_types.h" 3 4
# 1 "/usr/include/machine/_types.h" 1 3 4






# 1 "/usr/include/machine/_default_types.h" 1 3 4
# 25 "/usr/include/machine/_default_types.h" 3 4
typedef signed char __int8_t ;
typedef unsigned char __uint8_t ;
# 35 "/usr/include/machine/_default_types.h" 3 4
typedef signed short __int16_t;
typedef unsigned short __uint16_t;
# 45 "/usr/include/machine/_default_types.h" 3 4
typedef __int16_t __int_least16_t;
typedef __uint16_t __uint_least16_t;
# 57 "/usr/include/machine/_default_types.h" 3 4
typedef signed int __int32_t;
typedef unsigned int __uint32_t;
# 75 "/usr/include/machine/_default_types.h" 3 4
typedef __int32_t __int_least32_t;
typedef __uint32_t __uint_least32_t;
# 98 "/usr/include/machine/_default_types.h" 3 4
typedef signed long long __int64_t;
typedef unsigned long long __uint64_t;
# 8 "/usr/include/machine/_types.h" 2 3 4
# 13 "/usr/include/sys/_types.h" 2 3 4
# 1 "/usr/include/sys/lock.h" 1 3 4
# 14 "/usr/include/sys/lock.h" 3 4
typedef void *_LOCK_T;
# 44 "/usr/include/sys/lock.h" 3 4
void __cygwin_lock_init(_LOCK_T *);
void __cygwin_lock_init_recursive(_LOCK_T *);
void __cygwin_lock_fini(_LOCK_T *);
void __cygwin_lock_lock(_LOCK_T *);
int __cygwin_lock_trylock(_LOCK_T *);
void __cygwin_lock_unlock(_LOCK_T *);
# 14 "/usr/include/sys/_types.h" 2 3 4


typedef long _off_t;







typedef short __dev_t;




typedef unsigned short __uid_t;


typedef unsigned short __gid_t;



__extension__ typedef long long _off64_t;







typedef long _fpos_t;





typedef _off64_t _fpos64_t;





typedef int _ssize_t;






# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 1 3 4
# 352 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 3 4
typedef unsigned int wint_t;
# 64 "/usr/include/sys/_types.h" 2 3 4



typedef struct
{
  int __count;
  union
  {
    wint_t __wch;
    unsigned char __wchb[4];
  } __value;
} _mbstate_t;



typedef _LOCK_T _flock_t;




typedef void *_iconv_t;
# 15 "/usr/include/sys/reent.h" 2 3 4






typedef unsigned long __ULong;
# 37 "/usr/include/sys/reent.h" 3 4
struct _reent;






struct _Bigint
{
  struct _Bigint *_next;
  int _k, _maxwds, _sign, _wds;
  __ULong _x[1];
};


struct __tm
{
  int __tm_sec;
  int __tm_min;
  int __tm_hour;
  int __tm_mday;
  int __tm_mon;
  int __tm_year;
  int __tm_wday;
  int __tm_yday;
  int __tm_isdst;
};







struct _on_exit_args {
 void * _fnargs[32];
 void * _dso_handle[32];

 __ULong _fntypes;


 __ULong _is_cxa;
};
# 89 "/usr/include/sys/reent.h" 3 4
struct _atexit {
 struct _atexit *_next;
 int _ind;

 void (*_fns[32])(void);
        struct _on_exit_args _on_exit_args;
};
# 105 "/usr/include/sys/reent.h" 3 4
struct __sbuf {
 unsigned char *_base;
 int _size;
};
# 169 "/usr/include/sys/reent.h" 3 4
struct __sFILE {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;






  void * _cookie;

  _ssize_t (__attribute__((__cdecl__)) * _read) (struct _reent *, void *, char *, int)
                     ;
  _ssize_t (__attribute__((__cdecl__)) * _write) (struct _reent *, void *, const char *, int)
                            ;
  _fpos_t (__attribute__((__cdecl__)) * _seek) (struct _reent *, void *, _fpos_t, int);
  int (__attribute__((__cdecl__)) * _close) (struct _reent *, void *);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  int _offset;


  struct _reent *_data;



  _flock_t _lock;

  _mbstate_t _mbstate;
  int _flags2;
};
# 226 "/usr/include/sys/reent.h" 3 4
struct __sFILE64 {
  unsigned char *_p;
  int _r;
  int _w;
  short _flags;
  short _file;
  struct __sbuf _bf;
  int _lbfsize;

  struct _reent *_data;


  void * _cookie;

  _ssize_t (__attribute__((__cdecl__)) * _read) (struct _reent *, void *, char *, int)
                     ;
  _ssize_t (__attribute__((__cdecl__)) * _write) (struct _reent *, void *, const char *, int)
                            ;
  _fpos_t (__attribute__((__cdecl__)) * _seek) (struct _reent *, void *, _fpos_t, int);
  int (__attribute__((__cdecl__)) * _close) (struct _reent *, void *);


  struct __sbuf _ub;
  unsigned char *_up;
  int _ur;


  unsigned char _ubuf[3];
  unsigned char _nbuf[1];


  struct __sbuf _lb;


  int _blksize;
  int _flags2;

  _off64_t _offset;
  _fpos64_t (__attribute__((__cdecl__)) * _seek64) (struct _reent *, void *, _fpos64_t, int);


  _flock_t _lock;

  _mbstate_t _mbstate;
};
typedef struct __sFILE64 __FILE;





struct _glue
{
  struct _glue *_next;
  int _niobs;
  __FILE *_iobs;
};
# 305 "/usr/include/sys/reent.h" 3 4
struct _rand48 {
  unsigned short _seed[3];
  unsigned short _mult[3];
  unsigned short _add;




};
# 580 "/usr/include/sys/reent.h" 3 4
struct _reent
{
  int _errno;




  __FILE *_stdin, *_stdout, *_stderr;

  int _inc;
  char _emergency[25];

  int _current_category;
  const char *_current_locale;

  int __sdidinit;

  void (__attribute__((__cdecl__)) * __cleanup) (struct _reent *);


  struct _Bigint *_result;
  int _result_k;
  struct _Bigint *_p5s;
  struct _Bigint **_freelist;


  int _cvtlen;
  char *_cvtbuf;

  union
    {
      struct
        {
          unsigned int _unused_rand;
          char * _strtok_last;
          char _asctime_buf[26];
          struct __tm _localtime_buf;
          int _gamma_signgam;
          __extension__ unsigned long long _rand_next;
          struct _rand48 _r48;
          _mbstate_t _mblen_state;
          _mbstate_t _mbtowc_state;
          _mbstate_t _wctomb_state;
          char _l64a_buf[8];
          char _signal_buf[24];
          int _getdate_err;
          _mbstate_t _mbrlen_state;
          _mbstate_t _mbrtowc_state;
          _mbstate_t _mbsrtowcs_state;
          _mbstate_t _wcrtomb_state;
          _mbstate_t _wcsrtombs_state;
   int _h_errno;
        } _reent;



      struct
        {

          unsigned char * _nextf[30];
          unsigned int _nmalloc[30];
        } _unused;
    } _new;


  struct _atexit *_atexit;
  struct _atexit _atexit0;


  void (**(_sig_func))(int);




  struct _glue __sglue;
  __FILE __sf[3];
};
# 818 "/usr/include/sys/reent.h" 3 4
extern struct _reent *_impure_ptr ;
extern struct _reent *const _global_impure_ptr ;

void _reclaim_reent (struct _reent *);







  struct _reent * __attribute__((__cdecl__)) __getreent (void);
# 46 "/usr/include/stdio.h" 2 3 4
# 1 "/usr/include/sys/types.h" 1 3 4
# 69 "/usr/include/sys/types.h" 3 4
# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 1 3 4
# 149 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 3 4
typedef int ptrdiff_t;
# 323 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 3 4
typedef short unsigned int wchar_t;
# 70 "/usr/include/sys/types.h" 2 3 4
# 1 "/usr/include/machine/types.h" 1 3 4
# 19 "/usr/include/machine/types.h" 3 4
typedef long int __off_t;
typedef int __pid_t;

__extension__ typedef long long int __loff_t;
# 71 "/usr/include/sys/types.h" 2 3 4
# 92 "/usr/include/sys/types.h" 3 4
typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;



typedef unsigned short ushort;
typedef unsigned int uint;
typedef unsigned long ulong;



typedef unsigned long clock_t;




typedef long time_t;







struct timespec {
  time_t tv_sec;
  long tv_nsec;
};


struct itimerspec {
  struct timespec it_interval;
  struct timespec it_value;
};

typedef long daddr_t;
typedef char * caddr_t;
# 175 "/usr/include/sys/types.h" 3 4
typedef int pid_t;
# 185 "/usr/include/sys/types.h" 3 4
typedef _ssize_t ssize_t;
# 204 "/usr/include/sys/types.h" 3 4
typedef unsigned short nlink_t;
# 226 "/usr/include/sys/types.h" 3 4
typedef long fd_mask;







typedef struct _types_fd_set {
 fd_mask fds_bits[(((64)+(((sizeof (fd_mask) * 8))-1))/((sizeof (fd_mask) * 8)))];
} _types_fd_set;
# 257 "/usr/include/sys/types.h" 3 4
typedef unsigned long clockid_t;




typedef unsigned long timer_t;



typedef unsigned long useconds_t;
typedef long suseconds_t;
# 455 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/cygwin/types.h" 1 3 4
# 20 "/usr/include/cygwin/types.h" 3 4
# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stdint.h" 1 3 4


# 1 "/usr/include/stdint.h" 1 3 4
# 18 "/usr/include/stdint.h" 3 4
typedef signed char int8_t;
typedef short int16_t;
typedef int int32_t;



typedef long long int64_t;



typedef unsigned char uint8_t;
typedef unsigned short uint16_t;


typedef unsigned int uint32_t;




typedef unsigned long long uint64_t;




typedef signed char int_least8_t;
typedef short int_least16_t;
typedef int int_least32_t;



typedef long long int_least64_t;


typedef unsigned char uint_least8_t;
typedef unsigned short uint_least16_t;
typedef unsigned int uint_least32_t;



typedef unsigned long long uint_least64_t;




typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
typedef long long int_fast64_t;


typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
typedef unsigned long long uint_fast64_t;
# 91 "/usr/include/stdint.h" 3 4
typedef int intptr_t;





typedef unsigned int uintptr_t;
# 106 "/usr/include/stdint.h" 3 4
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
# 4 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stdint.h" 2 3 4
# 21 "/usr/include/cygwin/types.h" 2 3 4
# 1 "/usr/include/endian.h" 1 3 4
# 15 "/usr/include/endian.h" 3 4
# 1 "/usr/include/bits/endian.h" 1 3 4
# 16 "/usr/include/endian.h" 2 3 4
# 32 "/usr/include/endian.h" 3 4
# 1 "/usr/include/byteswap.h" 1 3 4
# 18 "/usr/include/byteswap.h" 3 4
static __inline unsigned short
bswap_16 (unsigned short __x)
{
  return (__x >> 8) | (__x << 8);
}

static __inline unsigned int
bswap_32 (unsigned int __x)
{
  return (bswap_16 (__x & 0xffff) << 16) | (bswap_16 (__x >> 16));
}

static __inline unsigned long long
bswap_64 (unsigned long long __x)
{
  return (((unsigned long long) bswap_32 (__x & 0xffffffffull)) << 32) | (bswap_32 (__x >> 32));
}
# 33 "/usr/include/endian.h" 2 3 4
# 22 "/usr/include/cygwin/types.h" 2 3 4



typedef struct timespec timespec_t;




typedef struct timespec timestruc_t;




typedef _off64_t off_t;


typedef __loff_t loff_t;



typedef short __dev16_t;
typedef unsigned long __dev32_t;
typedef __dev32_t dev_t;




typedef long blksize_t;




typedef long __blkcnt32_t;
typedef long long __blkcnt64_t;
typedef __blkcnt64_t blkcnt_t;




typedef unsigned long fsblkcnt_t;




typedef unsigned long fsfilcnt_t;




typedef unsigned short __uid16_t;
typedef unsigned long __uid32_t;
typedef __uid32_t uid_t;




typedef unsigned short __gid16_t;
typedef unsigned long __gid32_t;
typedef __gid32_t gid_t;




typedef unsigned long __ino32_t;
typedef unsigned long long __ino64_t;
typedef __ino64_t ino_t;





typedef unsigned long id_t;
# 115 "/usr/include/cygwin/types.h" 3 4
struct flock {
 short l_type;
 short l_whence;
 off_t l_start;
 off_t l_len;
 pid_t l_pid;
};



typedef long long key_t;







typedef unsigned long vm_offset_t;




typedef unsigned long vm_size_t;




typedef void *vm_object_t;




typedef unsigned char u_int8_t;



typedef __uint16_t u_int16_t;



typedef __uint32_t u_int32_t;



typedef __uint64_t u_int64_t;




typedef __int32_t register_t;




typedef char *addr_t;




typedef unsigned mode_t;





typedef struct __pthread_t {char __dummy;} *pthread_t;
typedef struct __pthread_mutex_t {char __dummy;} *pthread_mutex_t;

typedef struct __pthread_key_t {char __dummy;} *pthread_key_t;
typedef struct __pthread_attr_t {char __dummy;} *pthread_attr_t;
typedef struct __pthread_mutexattr_t {char __dummy;} *pthread_mutexattr_t;
typedef struct __pthread_condattr_t {char __dummy;} *pthread_condattr_t;
typedef struct __pthread_cond_t {char __dummy;} *pthread_cond_t;


typedef struct
{
  pthread_mutex_t mutex;
  int state;
}
pthread_once_t;
typedef struct __pthread_spinlock_t {char __dummy;} *pthread_spinlock_t;
typedef struct __pthread_rwlock_t {char __dummy;} *pthread_rwlock_t;
typedef struct __pthread_rwlockattr_t {char __dummy;} *pthread_rwlockattr_t;
# 222 "/usr/include/cygwin/types.h" 3 4
# 1 "/usr/include/sys/sysmacros.h" 1 3 4
# 14 "/usr/include/sys/sysmacros.h" 3 4
# 1 "/usr/include/sys/types.h" 1 3 4
# 15 "/usr/include/sys/sysmacros.h" 2 3 4

static __inline__ int gnu_dev_major(dev_t);
static __inline__ int gnu_dev_minor(dev_t);
static __inline__ dev_t gnu_dev_makedev(int, int);

static __inline__ int
gnu_dev_major(dev_t dev)
{
 return (int)(((dev) >> 16) & 0xffff);
}

static __inline__ int
gnu_dev_minor(dev_t dev)
{
 return (int)((dev) & 0xffff);
}

static __inline__ dev_t
gnu_dev_makedev(int maj, int min)
{
 return (((maj) << 16) | ((min) & 0xffff));
}
# 223 "/usr/include/cygwin/types.h" 2 3 4
# 456 "/usr/include/sys/types.h" 2 3 4
# 47 "/usr/include/stdio.h" 2 3 4



typedef __FILE FILE;


typedef _fpos64_t fpos_t;







# 1 "/usr/include/sys/stdio.h" 1 3 4
# 14 "/usr/include/sys/stdio.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 15 "/usr/include/sys/stdio.h" 2 3 4
# 35 "/usr/include/sys/stdio.h" 3 4


ssize_t __attribute__((__cdecl__)) getline (char **, size_t *, FILE *);
ssize_t __attribute__((__cdecl__)) getdelim (char **, size_t *, int, FILE *);


# 62 "/usr/include/stdio.h" 2 3 4
# 171 "/usr/include/stdio.h" 3 4
FILE * __attribute__((__cdecl__)) tmpfile (void);
char * __attribute__((__cdecl__)) tmpnam (char *);
int __attribute__((__cdecl__)) fclose (FILE *);
int __attribute__((__cdecl__)) fflush (FILE *);
FILE * __attribute__((__cdecl__)) freopen (const char *, const char *, FILE *);
void __attribute__((__cdecl__)) setbuf (FILE *, char *);
int __attribute__((__cdecl__)) setvbuf (FILE *, char *, int, size_t);
int __attribute__((__cdecl__)) fprintf (FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int __attribute__((__cdecl__)) fscanf (FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int __attribute__((__cdecl__)) printf (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2)))
                                                            ;
int __attribute__((__cdecl__)) scanf (const char *, ...) __attribute__ ((__format__ (__scanf__, 1, 2)))
                                                           ;
int __attribute__((__cdecl__)) sscanf (const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int __attribute__((__cdecl__)) vfprintf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) vprintf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 1, 0)))
                                                            ;
int __attribute__((__cdecl__)) vsprintf (char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) fgetc (FILE *);
char * __attribute__((__cdecl__)) fgets (char *, int, FILE *);
int __attribute__((__cdecl__)) fputc (int, FILE *);
int __attribute__((__cdecl__)) fputs (const char *, FILE *);
int __attribute__((__cdecl__)) getc (FILE *);
int __attribute__((__cdecl__)) getchar (void);
char * __attribute__((__cdecl__)) gets (char *);
int __attribute__((__cdecl__)) putc (int, FILE *);
int __attribute__((__cdecl__)) putchar (int);
int __attribute__((__cdecl__)) puts (const char *);
int __attribute__((__cdecl__)) ungetc (int, FILE *);
size_t __attribute__((__cdecl__)) fread (void *, size_t _size, size_t _n, FILE *);
size_t __attribute__((__cdecl__)) fwrite (const void * , size_t _size, size_t _n, FILE *);



int __attribute__((__cdecl__)) fgetpos (FILE *, fpos_t *);

int __attribute__((__cdecl__)) fseek (FILE *, long, int);



int __attribute__((__cdecl__)) fsetpos (FILE *, const fpos_t *);

long __attribute__((__cdecl__)) ftell ( FILE *);
void __attribute__((__cdecl__)) rewind (FILE *);
void __attribute__((__cdecl__)) clearerr (FILE *);
int __attribute__((__cdecl__)) feof (FILE *);
int __attribute__((__cdecl__)) ferror (FILE *);
void __attribute__((__cdecl__)) perror (const char *);

FILE * __attribute__((__cdecl__)) fopen (const char *_name, const char *_type);
int __attribute__((__cdecl__)) sprintf (char *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int __attribute__((__cdecl__)) remove (const char *);
int __attribute__((__cdecl__)) rename (const char *, const char *);
# 239 "/usr/include/stdio.h" 3 4
int __attribute__((__cdecl__)) fseeko (FILE *, off_t, int);
off_t __attribute__((__cdecl__)) ftello ( FILE *);




int __attribute__((__cdecl__)) asiprintf (char **, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
char * __attribute__((__cdecl__)) asniprintf (char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * __attribute__((__cdecl__)) asnprintf (char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) asprintf (char **, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

int __attribute__((__cdecl__)) diprintf (int, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;

int __attribute__((__cdecl__)) fcloseall (void);
int __attribute__((__cdecl__)) fiprintf (FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int __attribute__((__cdecl__)) fiscanf (FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int __attribute__((__cdecl__)) iprintf (const char *, ...) __attribute__ ((__format__ (__printf__, 1, 2)))
                                                            ;
int __attribute__((__cdecl__)) iscanf (const char *, ...) __attribute__ ((__format__ (__scanf__, 1, 2)))
                                                           ;
int __attribute__((__cdecl__)) siprintf (char *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int __attribute__((__cdecl__)) siscanf (const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int __attribute__((__cdecl__)) snprintf (char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) sniprintf (char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * __attribute__((__cdecl__)) tempnam (const char *, const char *);
int __attribute__((__cdecl__)) vasiprintf (char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
char * __attribute__((__cdecl__)) vasniprintf (char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
char * __attribute__((__cdecl__)) vasnprintf (char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) vasprintf (char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) vdiprintf (int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) vfiprintf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) vfiscanf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int __attribute__((__cdecl__)) vfscanf (FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int __attribute__((__cdecl__)) viprintf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 1, 0)))
                                                            ;
int __attribute__((__cdecl__)) viscanf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 1, 0)))
                                                           ;
int __attribute__((__cdecl__)) vscanf (const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 1, 0)))
                                                           ;
int __attribute__((__cdecl__)) vsiprintf (char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) vsiscanf (const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int __attribute__((__cdecl__)) vsniprintf (char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) vsnprintf (char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) vsscanf (const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
# 360 "/usr/include/stdio.h" 3 4
int __attribute__((__cdecl__)) _asiprintf_r (struct _reent *, char **, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
char * __attribute__((__cdecl__)) _asniprintf_r (struct _reent *, char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
char * __attribute__((__cdecl__)) _asnprintf_r (struct _reent *, char *, size_t *, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int __attribute__((__cdecl__)) _asprintf_r (struct _reent *, char **, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _diprintf_r (struct _reent *, int, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _dprintf_r (struct _reent *, int, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _fclose_r (struct _reent *, FILE *);
int __attribute__((__cdecl__)) _fcloseall_r (struct _reent *);
FILE * __attribute__((__cdecl__)) _fdopen_r (struct _reent *, int, const char *);
int __attribute__((__cdecl__)) _fflush_r (struct _reent *, FILE *);
int __attribute__((__cdecl__)) _fgetc_r (struct _reent *, FILE *);
char * __attribute__((__cdecl__)) _fgets_r (struct _reent *, char *, int, FILE *);




int __attribute__((__cdecl__)) _fgetpos_r (struct _reent *, FILE *, fpos_t *);
int __attribute__((__cdecl__)) _fsetpos_r (struct _reent *, FILE *, const fpos_t *);

int __attribute__((__cdecl__)) _fiprintf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _fiscanf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
FILE * __attribute__((__cdecl__)) _fmemopen_r (struct _reent *, void *, size_t, const char *);
FILE * __attribute__((__cdecl__)) _fopen_r (struct _reent *, const char *, const char *);
FILE * __attribute__((__cdecl__)) _freopen_r (struct _reent *, const char *, const char *, FILE *);
int __attribute__((__cdecl__)) _fprintf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _fpurge_r (struct _reent *, FILE *);
int __attribute__((__cdecl__)) _fputc_r (struct _reent *, int, FILE *);
int __attribute__((__cdecl__)) _fputs_r (struct _reent *, const char *, FILE *);
size_t __attribute__((__cdecl__)) _fread_r (struct _reent *, void *, size_t _size, size_t _n, FILE *);
int __attribute__((__cdecl__)) _fscanf_r (struct _reent *, FILE *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
int __attribute__((__cdecl__)) _fseek_r (struct _reent *, FILE *, long, int);
int __attribute__((__cdecl__)) _fseeko_r (struct _reent *, FILE *, _off_t, int);
long __attribute__((__cdecl__)) _ftell_r (struct _reent *, FILE *);
_off_t __attribute__((__cdecl__)) _ftello_r (struct _reent *, FILE *);
void __attribute__((__cdecl__)) _rewind_r (struct _reent *, FILE *);
size_t __attribute__((__cdecl__)) _fwrite_r (struct _reent *, const void * , size_t _size, size_t _n, FILE *);
int __attribute__((__cdecl__)) _getc_r (struct _reent *, FILE *);
int __attribute__((__cdecl__)) _getc_unlocked_r (struct _reent *, FILE *);
int __attribute__((__cdecl__)) _getchar_r (struct _reent *);
int __attribute__((__cdecl__)) _getchar_unlocked_r (struct _reent *);
char * __attribute__((__cdecl__)) _gets_r (struct _reent *, char *);
int __attribute__((__cdecl__)) _iprintf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int __attribute__((__cdecl__)) _iscanf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
FILE * __attribute__((__cdecl__)) _open_memstream_r (struct _reent *, char **, size_t *);
void __attribute__((__cdecl__)) _perror_r (struct _reent *, const char *);
int __attribute__((__cdecl__)) _printf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__printf__, 2, 3)))
                                                            ;
int __attribute__((__cdecl__)) _putc_r (struct _reent *, int, FILE *);
int __attribute__((__cdecl__)) _putc_unlocked_r (struct _reent *, int, FILE *);
int __attribute__((__cdecl__)) _putchar_unlocked_r (struct _reent *, int);
int __attribute__((__cdecl__)) _putchar_r (struct _reent *, int);
int __attribute__((__cdecl__)) _puts_r (struct _reent *, const char *);
int __attribute__((__cdecl__)) _remove_r (struct _reent *, const char *);
int __attribute__((__cdecl__)) _rename_r (struct _reent *, const char *_old, const char *_new)
                                          ;
int __attribute__((__cdecl__)) _scanf_r (struct _reent *, const char *, ...) __attribute__ ((__format__ (__scanf__, 2, 3)))
                                                           ;
int __attribute__((__cdecl__)) _siprintf_r (struct _reent *, char *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _siscanf_r (struct _reent *, const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
int __attribute__((__cdecl__)) _sniprintf_r (struct _reent *, char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int __attribute__((__cdecl__)) _snprintf_r (struct _reent *, char *, size_t, const char *, ...) __attribute__ ((__format__ (__printf__, 4, 5)))
                                                            ;
int __attribute__((__cdecl__)) _sprintf_r (struct _reent *, char *, const char *, ...) __attribute__ ((__format__ (__printf__, 3, 4)))
                                                            ;
int __attribute__((__cdecl__)) _sscanf_r (struct _reent *, const char *, const char *, ...) __attribute__ ((__format__ (__scanf__, 3, 4)))
                                                           ;
char * __attribute__((__cdecl__)) _tempnam_r (struct _reent *, const char *, const char *);
FILE * __attribute__((__cdecl__)) _tmpfile_r (struct _reent *);
char * __attribute__((__cdecl__)) _tmpnam_r (struct _reent *, char *);
int __attribute__((__cdecl__)) _ungetc_r (struct _reent *, int, FILE *);
int __attribute__((__cdecl__)) _vasiprintf_r (struct _reent *, char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
char * __attribute__((__cdecl__)) _vasniprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
char * __attribute__((__cdecl__)) _vasnprintf_r (struct _reent*, char *, size_t *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vasprintf_r (struct _reent *, char **, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vdiprintf_r (struct _reent *, int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vdprintf_r (struct _reent *, int, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vfiprintf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vfiscanf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int __attribute__((__cdecl__)) _vfprintf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vfscanf_r (struct _reent *, FILE *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int __attribute__((__cdecl__)) _viprintf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) _viscanf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int __attribute__((__cdecl__)) _vprintf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 2, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vscanf_r (struct _reent *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 2, 0)))
                                                           ;
int __attribute__((__cdecl__)) _vsiprintf_r (struct _reent *, char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vsiscanf_r (struct _reent *, const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;
int __attribute__((__cdecl__)) _vsniprintf_r (struct _reent *, char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vsnprintf_r (struct _reent *, char *, size_t, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 4, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vsprintf_r (struct _reent *, char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__printf__, 3, 0)))
                                                            ;
int __attribute__((__cdecl__)) _vsscanf_r (struct _reent *, const char *, const char *, __gnuc_va_list) __attribute__ ((__format__ (__scanf__, 3, 0)))
                                                           ;



int __attribute__((__cdecl__)) fpurge (FILE *);
ssize_t __attribute__((__cdecl__)) __getdelim (char **, size_t *, int, FILE *);
ssize_t __attribute__((__cdecl__)) __getline (char **, size_t *, FILE *);
# 518 "/usr/include/stdio.h" 3 4
int __attribute__((__cdecl__)) __srget_r (struct _reent *, FILE *);
int __attribute__((__cdecl__)) __swbuf_r (struct _reent *, int, FILE *);
# 598 "/usr/include/stdio.h" 3 4
static __inline__ int __sgetc_r(struct _reent *__ptr, FILE *__p);

static __inline__ int __sgetc_r(struct _reent *__ptr, FILE *__p)
  {
    int __c = (--(__p)->_r < 0 ? __srget_r(__ptr, __p) : (int)(*(__p)->_p++));
    if ((__p->_flags & 0x4000) && (__c == '\r'))
      {
      int __c2 = (--(__p)->_r < 0 ? __srget_r(__ptr, __p) : (int)(*(__p)->_p++));
      if (__c2 == '\n')
        __c = __c2;
      else
        ungetc(__c2, __p);
      }
    return __c;
  }
# 686 "/usr/include/stdio.h" 3 4

# 6 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error.h" 2
# 1 "/usr/include/stdlib.h" 1 3 4
# 10 "/usr/include/stdlib.h" 3 4
# 1 "/usr/include/machine/ieeefp.h" 1 3 4
# 11 "/usr/include/stdlib.h" 2 3 4




# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 1 3 4
# 16 "/usr/include/stdlib.h" 2 3 4


# 1 "/usr/include/machine/stdlib.h" 1 3 4
# 17 "/usr/include/machine/stdlib.h" 3 4
char *mkdtemp (char *);
# 19 "/usr/include/stdlib.h" 2 3 4





# 1 "/usr/include/cygwin/stdlib.h" 1 3 4
# 14 "/usr/include/cygwin/stdlib.h" 3 4
# 1 "/usr/include/cygwin/wait.h" 1 3 4
# 15 "/usr/include/cygwin/stdlib.h" 2 3 4






const char *getprogname (void);
void setprogname (const char *);
# 39 "/usr/include/cygwin/stdlib.h" 3 4
int posix_openpt (int);
int posix_memalign (void **, size_t, size_t);






extern void * memalign (size_t, size_t);
extern void * valloc (size_t);
# 25 "/usr/include/stdlib.h" 2 3 4




typedef struct
{
  int quot;
  int rem;
} div_t;

typedef struct
{
  long quot;
  long rem;
} ldiv_t;
# 58 "/usr/include/stdlib.h" 3 4
int __attribute__((__cdecl__)) __locale_mb_cur_max (void);



void __attribute__((__cdecl__)) abort (void) __attribute__ ((noreturn));
int __attribute__((__cdecl__)) abs (int);
int __attribute__((__cdecl__)) atexit (void (*__func)(void));
double __attribute__((__cdecl__)) atof (const char *__nptr);



int __attribute__((__cdecl__)) atoi (const char *__nptr);
int __attribute__((__cdecl__)) _atoi_r (struct _reent *, const char *__nptr);
long __attribute__((__cdecl__)) atol (const char *__nptr);
long __attribute__((__cdecl__)) _atol_r (struct _reent *, const char *__nptr);
void * __attribute__((__cdecl__)) bsearch (const void * __key, const void * __base, size_t __nmemb, size_t __size, int (__attribute__((__cdecl__)) * _compar) (const void *, const void *))



                                                         ;
void * __attribute__((__cdecl__)) calloc (size_t __nmemb, size_t __size) ;
div_t __attribute__((__cdecl__)) div (int __numer, int __denom);
void __attribute__((__cdecl__)) exit (int __status) __attribute__ ((noreturn));
void __attribute__((__cdecl__)) free (void *) ;
char * __attribute__((__cdecl__)) getenv (const char *__string);
char * __attribute__((__cdecl__)) _getenv_r (struct _reent *, const char *__string);
char * __attribute__((__cdecl__)) _findenv (const char *, int *);
char * __attribute__((__cdecl__)) _findenv_r (struct _reent *, const char *, int *);




long __attribute__((__cdecl__)) labs (long);
ldiv_t __attribute__((__cdecl__)) ldiv (long __numer, long __denom);
void * __attribute__((__cdecl__)) malloc (size_t __size) ;
int __attribute__((__cdecl__)) mblen (const char *, size_t);
int __attribute__((__cdecl__)) _mblen_r (struct _reent *, const char *, size_t, _mbstate_t *);
int __attribute__((__cdecl__)) mbtowc (wchar_t *, const char *, size_t);
int __attribute__((__cdecl__)) _mbtowc_r (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *);
int __attribute__((__cdecl__)) wctomb (char *, wchar_t);
int __attribute__((__cdecl__)) _wctomb_r (struct _reent *, char *, wchar_t, _mbstate_t *);
size_t __attribute__((__cdecl__)) mbstowcs (wchar_t *, const char *, size_t);
size_t __attribute__((__cdecl__)) _mbstowcs_r (struct _reent *, wchar_t *, const char *, size_t, _mbstate_t *);
size_t __attribute__((__cdecl__)) wcstombs (char *, const wchar_t *, size_t);
size_t __attribute__((__cdecl__)) _wcstombs_r (struct _reent *, char *, const wchar_t *, size_t, _mbstate_t *);
# 119 "/usr/include/stdlib.h" 3 4
void __attribute__((__cdecl__)) qsort (void * __base, size_t __nmemb, size_t __size, int(*_compar)(const void *, const void *));
int __attribute__((__cdecl__)) rand (void);
void * __attribute__((__cdecl__)) realloc (void * __r, size_t __size) ;



void __attribute__((__cdecl__)) srand (unsigned __seed);
double __attribute__((__cdecl__)) strtod (const char *__n, char **__end_PTR);
double __attribute__((__cdecl__)) _strtod_r (struct _reent *,const char *__n, char **__end_PTR);
float __attribute__((__cdecl__)) strtof (const char *__n, char **__end_PTR);






long __attribute__((__cdecl__)) strtol (const char *__n, char **__end_PTR, int __base);
long __attribute__((__cdecl__)) _strtol_r (struct _reent *,const char *__n, char **__end_PTR, int __base);
unsigned long __attribute__((__cdecl__)) strtoul (const char *__n, char **__end_PTR, int __base);
unsigned long __attribute__((__cdecl__)) _strtoul_r (struct _reent *,const char *__n, char **__end_PTR, int __base);

int __attribute__((__cdecl__)) system (const char *__string);
# 206 "/usr/include/stdlib.h" 3 4
char * __attribute__((__cdecl__)) _dtoa_r (struct _reent *, double, int, int, int *, int*, char**);







int __attribute__((__cdecl__)) _system_r (struct _reent *, const char *);

void __attribute__((__cdecl__)) __eprintf (const char *, const char *, unsigned int, const char *);








# 7 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error.h" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_types.h" 1
# 8 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error.h" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error_codes.h" 1
# 9 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error.h" 2

 extern gpInt gp_errno;
 extern gpString GP_ERRSTR[];

 gpVoid __print_called_from(gpString filename,gpInt line);
 gpVoid __print_error();
 gpVoid __print_assertion();
# 5 "Source/base\\/gp_error.c" 2



# 1 "/usr/include/string.h" 1 3 4
# 15 "/usr/include/string.h" 3 4
# 1 "/usr/lib/gcc/i686-pc-cygwin/4.5.3/include/stddef.h" 1 3 4
# 16 "/usr/include/string.h" 2 3 4







void * __attribute__((__cdecl__)) memchr (const void *, int, size_t);
int __attribute__((__cdecl__)) memcmp (const void *, const void *, size_t);
void * __attribute__((__cdecl__)) memcpy (void *, const void *, size_t);
void * __attribute__((__cdecl__)) memmove (void *, const void *, size_t);
void * __attribute__((__cdecl__)) memset (void *, int, size_t);
char *__attribute__((__cdecl__)) strcat (char *, const char *);
char *__attribute__((__cdecl__)) strchr (const char *, int);
int __attribute__((__cdecl__)) strcmp (const char *, const char *);
int __attribute__((__cdecl__)) strcoll (const char *, const char *);
char *__attribute__((__cdecl__)) strcpy (char *, const char *);
size_t __attribute__((__cdecl__)) strcspn (const char *, const char *);
char *__attribute__((__cdecl__)) strerror (int);
size_t __attribute__((__cdecl__)) strlen (const char *);
char *__attribute__((__cdecl__)) strncat (char *, const char *, size_t);
int __attribute__((__cdecl__)) strncmp (const char *, const char *, size_t);
char *__attribute__((__cdecl__)) strncpy (char *, const char *, size_t);
char *__attribute__((__cdecl__)) strpbrk (const char *, const char *);
char *__attribute__((__cdecl__)) strrchr (const char *, int);
size_t __attribute__((__cdecl__)) strspn (const char *, const char *);
char *__attribute__((__cdecl__)) strstr (const char *, const char *);


char *__attribute__((__cdecl__)) strtok (char *, const char *);


size_t __attribute__((__cdecl__)) strxfrm (char *, const char *, size_t);
# 133 "/usr/include/string.h" 3 4
# 1 "/usr/include/sys/string.h" 1 3 4
# 134 "/usr/include/string.h" 2 3 4


# 9 "Source/base\\/gp_error.c" 2

# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Base/gp_error_codes.h" 1
# 11 "Source/base\\/gp_error.c" 2

static void ___nth(FILE* fd, gpInt line){
   gpInt stat, cline=1, i, j;
   gpBool nend=true, all=false;
   gpChar buff[4096 +1];

   while(nend){
      stat=fread(buff,1,4096,fd);
      if(stat==-1)return;
      if(stat<4096)nend=false,all=true;
      for(i=0; cline<line && i<stat; ++i)
         if(buff[i]=='\n')
            ++cline;
      if(cline==line)nend=false;
   }

   if(cline==line){
      for(j=i+1; j<stat && buff[j]!='\n';++j);
      if(j<stat)buff[j]='\0';
      else{
         if(!all){
            buff[stat]='\0';
            strcpy(buff,buff+i);
            i=0;
            fread(buff+i,1,4096 -i,fd);
            for(j=i+1; j<stat && buff[j]!='\n';++j);
            if(j<stat)buff[j]='\0';
            else return;
         }
         else buff[stat]='\0';
      }
   }
   fprintf(((__getreent())->_stderr),"%s\n",buff+i);
}

gpVoid __print_called_from(gpString filename,gpInt line){
 printf("File:\"%s\"\tLine: %d:\t", filename, line);
 FILE*f=fopen(filename,"r");
 if(!f){puts("");return;}

 ___nth(f,line);
}
gpVoid __print_error(){
 if(gp_errno==0)return;
 if(gp_errno<0)return;
 printf("ERROR: %s\n",GP_ERRSTR[gp_errno]);
}

gpVoid __print_assertion(){
 if(gp_errno==0)return;
 if(gp_errno<0)return;
 printf("ASSERTION FAILED: %s\n",GP_ERRSTR[gp_errno]);
}
# 6 "Source/base\\gp.c" 2
# 1 "Source/base\\/gp_error_codes.c" 1






gpInt gp_errno;
gpString GP_ERRSTR[]={
"No error",
"Bad argument excetion",
"Index out of boud exception",
"An example error",
"Memory limit exceeded",
"Memory Violation",

};
# 7 "Source/base\\gp.c" 2
# 5 "Source/gp_Main.c" 2
# 1 "Source/alloc\\gp_Alloc.c" 1


# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/gp_Alloc.h" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp.h" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp_types.h" 1
# 5 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp.h" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp_error.h" 1
# 6 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp.h" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp_error_codes.h" 1
# 7 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp.h" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp_bool.h" 1



extern const gpBool true;
extern const gpBool false;
# 8 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/../Base/gp.h" 2
# 5 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Alloc/gp_Alloc.h" 2





gpVoid* gpAlloc_alloc(gpInt size);
gpVoid gpAlloc_free(gpVoid* ptr);
# 4 "Source/alloc\\gp_Alloc.c" 2

gpUByte _gpAlloc_allocated_memory[1000];
gpUByte* _gpAlloc_after_last_allocated_index = _gpAlloc_allocated_memory;

gpUByte* _gpAlloc_nearestFreeSpace(gpInt);
gpUByte* _gpAlloc_freeSpaceInRange(gpInt, gpUByte*, gpUByte*);

gpVoid gpAlloc_free(gpVoid* ptr)
{
 do{ gp_errno=0; }while(0);
 gpUByte* start_ptr = ((gpUByte*) ptr) - sizeof(gpInt) + 1;
 gpInt size = *start_ptr;

 do{if(!(start_ptr >= _gpAlloc_allocated_memory)){ gp_errno=5; __print_assertion(gp_errno); __print_called_from("Source/alloc\\gp_Alloc.c",17); gp_errno=-gp_errno; return; }}while(0);
 do{if(!(start_ptr + size <= _gpAlloc_allocated_memory + _gp_ALLOC_MAX_MEM)){ gp_errno=5; __print_assertion(gp_errno); __print_called_from("Source/alloc\\gp_Alloc.c",18); gp_errno=-gp_errno; return; }}while(0);

 for(gpUByte* i = start_ptr; i < start_ptr + size + sizeof(gpInt); i++)
 {
  *i = 0;
 }
}

gpVoid* gpAlloc_alloc(gpInt size)
{
 do{ gp_errno=0; }while(0);

 if(size < 0)
 {


 gp_errno = 1;


  return null;
 }

 gpUByte* freeSpace = _gpAlloc_nearestFreeSpace(size + sizeof(gpInt));
 if(freeSpace == null)
 {


 gp_errno = 4;

  return null;
 }
 *((gpInt*)freeSpace) = size;
 _gpAlloc_after_last_allocated_index = freeSpace + size + sizeof(gpInt);
 return freeSpace + sizeof(gpInt) - 1;
}

gpUByte* _gpAlloc_nearestFreeSpace(gpInt size)
{
 gpInt* rightBound = _gpAlloc_allocated_memory + 1000 - 1;
 gpInt* freeSpace = _gpAlloc_freeSpaceInRange(size, _gpAlloc_after_last_allocated_index, rightBound) ;do{ if(gp_errno != 0){ if(gp_errno<0){ printf("Called from: \n"); __print_called_from("Source/alloc\\gp_Alloc.c",57); }else{ __print_error(gp_errno); __print_called_from("Source/alloc\\gp_Alloc.c",57); gp_errno=-gp_errno; } } }while(0);

 if(freeSpace != null)
 {
  return freeSpace;
 }

 return _gpAlloc_freeSpaceInRange(size, _gpAlloc_allocated_memory, _gpAlloc_after_last_allocated_index);
}


gpUByte* _gpAlloc_freeSpaceInRange(gpInt size, gpUByte* start, gpUByte* end)
{
 while(start + size - 1 <= end)
 {
  gpInt startValue = *start;
  if(startValue != 0)
  {
   start += startValue;
  }
  else
  {
   gpUByte* tmp = start;

   while(tmp <= start + size && *tmp == 0)
   {
    tmp++;
   }

   if(tmp == start + size + 1)
   {
    return start;
   }

   start = tmp;
  }
 }

 return null;
}
# 6 "Source/gp_Main.c" 2
# 1 "Source/math\\gp_Math.c" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Math/gp_Math.h" 1


# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Math/../Base/gp.h" 1
# 4 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Math/gp_Math.h" 2

gpInt gpMath_MinInt(gpInt, gpInt);
gpInt* gpMath_MinIntP(gpInt*, gpInt*);
# 5 "Source/math\\gp_Math.c" 2

gpInt gpMath_MinInt(gpInt a, gpInt b)
{
 return a > b ? b : a;
}

gpInt* gpMath_MinIntP(gpInt* a, gpInt* b)
{
 return a > b ? b : a;
}
# 7 "Source/gp_Main.c" 2
# 1 "Source/instance\\gp_Instance.c" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/gp_Instance.h" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/../Base/gp_types.h" 1
# 5 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/gp_Instance.h" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/../InputGesture/gp_InputGesture.h" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/../InputGesture/../Base/gp_types.h" 1
# 5 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/../InputGesture/gp_InputGesture.h" 2

typedef struct gpInputGesture {
 gpWord id;
} gpInputGesture;
# 6 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/Instance/gp_Instance.h" 2

typedef struct gpInstance {

 gpFloat* vector;

 gpWord size;


 gpString label;


 gpWord id;
} gpInstance;

gpInstance* gpInstance_createInstance(gpInt, gpInt, gpInputGesture*, gpString);
# 5 "Source/instance\\gp_Instance.c" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/GestureStore/gp_GestureStore.h" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/GestureStore/../Base/gp_types.h" 1
# 5 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/GestureStore/gp_GestureStore.h" 2

gpInt gpGestureStore_SEQUENCE_INVARIANT = 1;

gpInt gpGestureStore_SEQUENCE_SENSITIVE = 2;


gpInt gpGestureStore_ORIENTATION_INVARIANT = 1;

gpInt gpGestureStore_ORIENTATION_SENSITIVE = 2;
# 6 "Source/instance\\gp_Instance.c" 2


gpInt _gpInstance_SEQUENCE_SAMPLE_SIZE = 16;
gpInt _gpInstance_PATCH_SAMPLE_SIZE = 16;
# 19 "Source/instance\\gp_Instance.c"
gpInstance* New(gpWord id, gpFloat* sample, gpWord size, gpString label)
{
 gpInstance* instance = gpAlloc_alloc(sizeof(gpInstance));
 instance->id = id;
 instance->vector = sample;
 instance->size = size;
 instance->label = label;
 return instance;
}

void _gpInstance_normalize(gpInstance* this) {
 gpFloat* sample = this->vector;
 gpFloat sum = 0;

 for (gpInt i = 0; i < this->size; i++) {
  sum = gpAdd(sum, gpMul(sample[i], sample[i]));
 }

 gpFloat magnitude = gpMath_sqrt(sum);
 for (gpInt i = 0; i < this->size; i++) {
  sample[i] = gpDiv(sample[i], magnitude);
 }
}

gpInstance* gpInstance_createInstance(gpInt sequenceType, gpInt orientationType, gpInputGesture* gesture, gpString label)
{
        gpFloat* pts;
        gpInstance* instance;
        if (sequenceType == gpGestureStore_SEQUENCE_SENSITIVE) {
            pts = temporalSampler(orientationType, gesture);
            instance = New(gesture->id, pts, label);
            _gpInstance_normalize(instance);
        } else {
            pts = spatialSampler(gesture);
            instance = New(gesture->id, pts, label);
        }
        return instance;
    }
# 8 "Source/gp_Main.c" 2
# 1 "Source/instancelearner\\gp_InstanceLearner.c" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/InstanceLearner/gp_InstanceLearner.h" 1



# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/InstanceLearner/../Base/gp_types.h" 1
# 5 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/InstanceLearner/gp_InstanceLearner.h" 2

gpInt gpInstanceLearer_classify(gpInt, gpInt, gpFloat[]);
# 5 "Source/instancelearner\\gp_InstanceLearner.c" 2
# 1 "D:\\Common\\projects\\mikro_repo\\Mikro\\project_c\\BaseProject\\Include/InputGesture/gp_InputGesture.h" 1
# 6 "Source/instancelearner\\gp_InstanceLearner.c" 2
# 9 "Source/gp_Main.c" 2
